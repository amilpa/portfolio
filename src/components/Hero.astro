---
import Profile from "../assets/site_pic.jpg";
---

<div class="relative -z-10">
  <img
    src={Profile}
    class="h-[80px] md:h-[100px] relative top-12 rounded-full m-auto border-2 border-white dark:border-gray-400 dark:border-gray-"
    alt=""
  />
  <h1
    class="relative top-12 text-center font-semibold text-2xl dark:text-white"
  >
    Amil P A
  </h1>
  <div
    class="typing-container relative top-12 text-center dark:text-white text-xl"
  >
    <span id="typed-text" class="border-r-2 border-black dark:border-white"
    ></span>
  </div>
  <div class="relative top-16 text-center">
    <button
      class="transition-opacity text-white dark:text-black bg-emerald-600 dark:bg-emerald-200 rounded-sm px-3 py-1 text-base font-semibold hover:opacity-80"
      >Contact</button
    >
    <button
      class="ml-1 transition-opacity text-white dark:text-black bg-zinc-800 dark:bg-zinc-100 px-3 py-1 rounded-sm text-base font-semibold hover:opacity-80"
      >Resume</button
    >
  </div>
</div>

<script>
  const words = ["Developer", "Designer", "Creator"];
  const typedTextElement = document.getElementById("typed-text");

  function typeAndDeleteWords() {
    let wordIndex = 0;
    let charIndex = 0;
    let isTyping = true;

    function typeNextChar() {
      const word = words[wordIndex];

      if (typedTextElement)
        typedTextElement.textContent = word.substring(0, charIndex);

      if (isTyping) {
        charIndex++;
        if (charIndex > word.length) {
          isTyping = false;
          setTimeout(typeNextChar, 500); // Delay before deleting
        } else {
          setTimeout(typeNextChar, 80); // Typing speed
        }
      } else {
        charIndex--;
        if (charIndex < 0) {
          isTyping = true;
          wordIndex = (wordIndex + 1) % words.length;
          setTimeout(typeNextChar, 10); // Delay before typing the new word
        } else {
          setTimeout(typeNextChar, 80); // Deletion speed
        }
      }
    }

    typeNextChar();
  }

  typeAndDeleteWords();
</script>
